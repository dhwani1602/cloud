name: Build, Test, and Deploy React App

# Trigger the workflow on push to the main branch 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu as the runner environment

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout your repository code

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2  # Setup Node.js
      with:
        node-version: '14'  # Use Node.js version 14 (adjust if necessary)

    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm install  # Install both client and server dependencies

    # Step 4: Run tests
    - name: Run tests
      run: npm test -- --coverage --watchAll=false  # Run tests with coverage (and avoid watching files in CI)

    # Step 5: Build the React app
    - name: Build React app
      run: npm run build  # Build the React app using react-scripts build

  deploy:
    runs-on: ubuntu-latest  # Use Ubuntu as the runner for the deployment job
    needs: build  # Ensure the build job runs first

    steps:
    # Step 1: Checkout code (again)
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout your repository code

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2  # Setup Node.js
      with:
        node-version: '14'  # Use Node.js version 14 (adjust if necessary)

    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm install  # Install the project dependencies

    # Step 4: Deploy to GitHub Pages (if using GitHub Pages for deployment)
    - name: Deploy to GitHub Pages
      run: |
        npm install gh-pages --save-dev  # Install the gh-pages package if needed
        npm run deploy  # Use the deploy script to deploy the app

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token to authenticate the deployment
